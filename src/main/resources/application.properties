server.port=8080
mockResponse.delay=2000
error.rate=10
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests = true
management.metrics.distribution.slo.http = 50ms, 100ms, 250ms, 500ms, 1500ms, 2000ms
management.metrics.distribution.slo.server = 50ms, 100ms, 250ms, 500ms, 1500ms, 2000ms
management.metrics.distribution.slo.requests = 50ms, 100ms, 250ms, 500ms, 1500ms, 2000ms
resilience4j.ratelimiter.configs.default.limit-for-period=1
resilience4j.ratelimiter.configs.default.limit-refresh-period=10s
resilience4j.ratelimiter.configs.default.timeout-duration=30s
resilience4j.ratelimiter.metrics.enabled=true
resilience4j.ratelimiter.instances.rateLimiterApi.register-health-indicator=true
resilience4j.ratelimiter.instances.rateLimiterApi.limit-for-period=5
resilience4j.ratelimiter.instances.rateLimiterApi.limit-refresh-period=60s
resilience4j.ratelimiter.instances.rateLimiterApi.timeout-duration=0s
resilience4j.ratelimiter.instances.rateLimiterApi.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.rateLimiterApi.subscribe-for-events=true
resilience4j.ratelimiter.instances.rateLimiterApi.event-consumer-buffer-size=50
spring.kafka.bootstrap-servers=localhost:29092